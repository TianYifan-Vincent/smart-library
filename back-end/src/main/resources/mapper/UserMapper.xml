<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lib.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.lib.entity.User">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jul 05 13:25:15 CST 2022.
    -->
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="superadmin" jdbcType="INTEGER" property="superadmin" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="isvalid" jdbcType="INTEGER" property="isvalid" />
  </resultMap>

  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jul 05 13:25:15 CST 2022.
    -->
    select id, user_name, login_name, password, gender, age, email, phone, superadmin, 
    salt, isvalid
    from user
  </select>
  <insert id="insert" keyProperty="id" parameterType="com.lib.entity.User" useGeneratedKeys="true">
    <selectKey keyProperty="id" order="BEFORE" resultType="int">
      SELECT IFNULL((SELECT max(id) FROM user)+1, 1) as id
    </selectKey>
    insert into user (id, user_name, login_name, 
      password, gender, age, 
      email, phone, superadmin, 
      salt, isvalid
      )
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{superadmin,jdbcType=INTEGER}, 
      #{salt,jdbcType=VARCHAR}, #{isvalid,jdbcType=INTEGER}
      )
  </insert>

  <!-- List<User> selectUserByLoginName(String loginName); -->
  <select id="selectUserByLoginName" resultMap="BaseResultMap">
    select id, user_name, login_name, password, gender, age, email, phone, superadmin,
    salt, isvalid
    from user where login_name = #{loginName}
  </select>

  <!-- List<User> selectUserByEmail(@Param("email") String email); -->
  <select id="selectUserByEmail" resultMap="BaseResultMap">
    select id, user_name, login_name, password, gender, age, email, phone, superadmin,
           salt, isvalid
    from user where email = #{email}
  </select>

  <!-- int updatePasswordAndSaltByEmail(@Param("email") String email,@Param("salt") String salt, @Param("password") String password); -->
  <update id="updatePasswordAndSaltByEmail">
    update user set password = #{password}, salt = #{salt}
    where email = #{email};
  </update>

  <!-- User selectByPrimaryKey(@Param("id") Integer id); -->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select * from user where id = #{id}
  </select>


  <!-- int updateAdminInfo(@Param("id") Integer id, @Param("salt") String salt, @Param("password") String password, @Param("gender") String gender, @Param("age") Integer age, @Param("email") String email, @Param("introduce") String introduce); -->
  <update id="updateAdminInfo">
    update user
    <set>
        <if test="password != null and password != '' and password != null">
            password = #{password},salt = #{salt},
        </if>

        <if test="gender != null and gender != '' and gender != null">
            gender = #{gender},
        </if>

        <if test="age != null and age != '' and age != null">
             age = #{age},
        </if>

        <if test="email != null and email != '' and email != null">
            email = #{email},
        </if>

        <if test="introduce != null and introduce != '' and introduce != null">
            introduce = #{introduce},
        </if>
    </set>

    where id = #{id}
  </update>

</mapper>