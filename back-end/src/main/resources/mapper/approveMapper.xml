<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lib.mapper.approveMapper">
    <resultMap id="BaseResultMap" type="com.lib.entity.approve">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Tue Jul 05 13:25:15 CST 2022.
        -->
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="status" jdbcType="INTEGER" property="status" />
        <result column="date" jdbcType="TIMESTAMP" property="date" />
        <result column="book_id" jdbcType="INTEGER" property="bookId" />
        <result column="reader_id" jdbcType="INTEGER" property="readerId" />
        <result column="operation" jdbcType="INTEGER" property="operation" />
    </resultMap>

    <!-- List<approve> selectByReaderId(@Param("readerId") Integer readerId); -->
    <select id="selectByReaderId" parameterType="java.lang.Integer" resultMap="BaseResultMap">

        select *
        from approve
        where reader_id = #{readerId,jdbcType=INTEGER}
    </select>

    <!-- List<approve> selectByBookId(@Param("bookId") Integer bookId); -->
    <select id="selectByBookId" parameterType="java.lang.Integer" resultMap="BaseResultMap">

        select *
        from approve
        where book_Id = #{bookId,jdbcType=INTEGER}
    </select>

    <!--List<approve> selectAllWaitingMessages(); -->
    <select id="selectAllWaitingMessages" resultMap="BaseResultMap">
        select *
        from approve
        where status = 0
    </select>

    <!--List<approve> selectAllFinishedMessages(); -->
    <select id="selectAllFinishedMessages" resultMap="BaseResultMap">
        select *
        from approve
        where status != 0
    </select>


    <!-- int updateStatusByBookIdAndReaderIdAndDateAndOperation(@Param("status") Integer status, @Param("bookId") Integer bookId, @Param("readerId") Integer readerId, @Param("operation") Integer operation, @Param("date") Date date); -->
    <update id="updateStatusByBookIdAndReaderIdAndDateAndOperation">
        update approve set
        status = #{status}
        where book_id = #{bookId} and reader_id = #{readerId} and date = #{date} and operation = #{operation}
    </update>

    <!-- int deleteFinishedByParam(@Param("bookId") Integer bookId, @Param("readerId") Integer readerId, @Param("operation") Integer operation, @Param("date") Date date, @Param("status") Integer status); -->
    <delete id="deleteFinishedByParam">
        delete from approve
        where
        book_id = #{bookId} and
        reader_id = #{readerId} and
        date = #{date} and
        operation = #{operation} and
        status != 0
    </delete>

    <!-- int insert(approve approve); -->
    <insert id="insert">
        <selectKey keyProperty="id" order="BEFORE" resultType="int">
            SELECT IFNULL((SELECT max(id) FROM approve)+1, 1) as id
        </selectKey>
        insert into approve(id, reader_id, book_id, operation, date, status)
        values (#{id}, #{readerId}, #{bookId}, #{operation}, #{date}, #{status})
    </insert>

    <!-- int deleteWaitingByParam(@Param("bookId") Integer bookId, @Param("readerId") Integer readerId, @Param("operation") Integer operation, @Param("date") Date date, @Param("status") Integer status); -->
    <delete id="deleteWaitingByParam">
        delete from approve
        where
            book_id = #{bookId} and
            reader_id = #{readerId} and
            date = #{date} and
            operation = #{operation} and
            status = 0
    </delete>
</mapper>