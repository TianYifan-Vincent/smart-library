<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lib.mapper.borrowReturnBooksMapper">
  <resultMap id="BaseResultMap" type="com.lib.entity.borrowReturnBooks">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jul 05 13:25:15 CST 2022.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="reader_id" jdbcType="INTEGER" property="readerId" />
    <result column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="borrow_time" jdbcType="TIMESTAMP" property="borrowTime" />
    <result column="return_time" jdbcType="TIMESTAMP" property="returnTime" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="plan_time" jdbcType="DATE" property="planTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jul 05 13:25:15 CST 2022.
    -->
    delete from borrow_return_books
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByBookId" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jul 05 13:25:15 CST 2022.
    -->
    delete from borrow_return_books
    where book_id = #{bookId,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByReaderId" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jul 05 13:25:15 CST 2022.
    -->
    delete from borrow_return_books
    where reader_id = #{readerId,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.lib.entity.borrowReturnBooks">
    <selectKey keyProperty="id" order="BEFORE" resultType="INTEGER">
      SELECT IFNULL((SELECT max(id) FROM borrow_return_books) + 1, 1) as id
    </selectKey>
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jul 05 13:25:15 CST 2022.
    -->
    insert into borrow_return_books (id, reader_id, book_id,
      borrow_time, return_time, user_id, 
      status, plan_time)
    values (#{id,jdbcType=INTEGER}, #{readerId,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER},
      #{borrowTime,jdbcType=TIMESTAMP}, #{returnTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{planTime})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.lib.entity.borrowReturnBooks">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jul 05 13:25:15 CST 2022.
    -->
    update borrow_return_books
    set reader_id = #{readerId,jdbcType=INTEGER},
      book_id = #{bookId,jdbcType=INTEGER},
      borrow_time = #{borrowTime,jdbcType=TIMESTAMP},
      return_time = #{returnTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      plan_time = #{planTime}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!-- int updateStatusAndReturnTime(@Param("status") Integer status, @Param("returnTime") Date returnTime, @Param("readerId") Integer readerID, @Param("bookId") Integer bookId); -->
  <update id="updateStatusAndReturnTime">
    update borrow_return_books
    set status = #{status,jdbcType=INTEGER},
        return_time = #{returnTime}
    where book_id = #{bookId,jdbcType=INTEGER} and
        reader_id = #{readerId,jdbcType=INTEGER} and
        status = 1

  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jul 05 13:25:15 CST 2022.
    -->
    select *
    from borrow_return_books
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jul 05 13:25:15 CST 2022.
    -->
    select *
    from borrow_return_books
  </select>

  <!-- List<borrowReturnBooks> selectUnfinishedByReaderId(@Param("readerId") Integer readerID); -->
  <select id="selectUnfinishedByReaderId" resultMap="BaseResultMap">
    select *
    from borrow_return_books
    where reader_id = #{readerId} and status = 1
  </select>

  <!-- List<borrowReturnBooks> selectByBookId(@Param("bookId") Integer bookId); -->
  <select id="selectByBookId" resultMap="BaseResultMap">
    select *
    from borrow_return_books
    where book_id = #{bookId} and status = 1
  </select>

  <!-- Date getPlanTimeByReaderIdAndBookId(@Param("readerId") Integer readerID, @Param("bookId") Integer bookId); -->
  <select id="getPlanTimeByReaderIdAndBookId" resultType="DATE">
    select plan_time
    from borrow_return_books
    where book_id = #{bookId} and  reader_id = #{readerId} and status = 1
  </select>

  <!-- List<brbEntitys> selectAllByKeyWord(@Param("keyWord") String keyWord); -->
  <select id="selectAllByKeyWord" resultType="com.lib.controller.vo.brbEntity">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jul 05 13:25:15 CST 2022.
    -->
    select borrow_return_books.id,title,loginName,publisher,borrow_time,return_time,status
    from borrow_return_books,reader,book
    <where>
      borrow_return_books.book_id = book.id and borrow_return_books.reader_id = reader.id
      <if test="keyWord != '' and keyWord != 'null'">
        and (title like '%${keyWord}%' or loginName like '%${keyWord}%' or publisher like '%${keyWord}%' or borrow_time like '%${keyWord}%')
      </if>
    </where>
  </select>

  <!-- List<Map<Integer, BigDecimal>> getAllBorrowedBook(); -->
  <select id="getAllBorrowedBook" resultType="Map">
    select book_id as bookId, count(*) as cnt
    from borrow_return_books
    group by book_id
  </select>

  <!-- List<borrowReturnBooks> selectByReaderId(@Param("readerId") Integer readerId); -->
  <select id="selectByReaderId" resultMap="BaseResultMap">
    select * from borrow_return_books where reader_id = #{readerId} order by borrow_time desc limit 0,5
  </select>

  <!-- List<ReaderRecordVO> getReaderRecordByReaderIdAndKeyWord(@Param("readerId") Integer readerId, @Param("keyWord") String keyWord); -->
  <select id="getReaderRecordByReaderIdAndKeyWord" resultType="com.lib.controller.vo.ReaderRecordVO">
    select borrow_return_books.id, title, publisher, borrow_time, plan_time, return_time, borrow_return_books.status
    from borrow_return_books, book
    where borrow_return_books.book_id = book.id
    and borrow_return_books.reader_id = #{readerId}
    <if test="keyWord != '' and keyWord != null and keyWord != 'null' ">
      and (title like '%${keyWord}%' or publisher like '%${keyWord}%' or borrow_time like '%${keyWord}%' or plan_time like '%${keyWord}%')
    </if>
  </select>

  <!-- int selectCountByReaderId(@Param("readerId") Integer readerId); -->
  <select id="selectCountByReaderId" resultType="INTEGER">
    select  count(*) from borrow_return_books
    where reader_id = #{readerId} and status = 1
  </select>

  <!-- int selectOverdueCountByReaderId(@Param("readerId") Integer readerId, @Param("date") Date date); -->
  <select id="selectOverdueCountByReaderId" resultType="INTEGER">
    select count(*) from borrow_return_books
    where reader_id = #{readerId} and status = 1 and #{date} > plan_time
  </select>

  <!-- List<Integer> getAllCategoryBorrowedByReaderId(@Param("readerId") Integer readerId); -->
  <select id="getAllCategoryBorrowedByReaderId" resultType="INTEGER">
    select category
    from borrow_return_books, book
    where reader_id = #{readerId} and borrow_return_books.book_id = book.id group by category
  </select>

  <!-- Long checkCountApproveAndBorrow(@Param("bookId") Integer bookId); -->
  <select id="checkCountApproveAndBorrow" resultType="LONG">
    select count(*)
    from borrow_return_books, book
    where book_id = #{bookId} and borrow_return_books.book_id = book.id
  </select>

</mapper>