package com.lib.mapper;

import com.lib.controller.vo.ReaderRecordVO;
import com.lib.controller.vo.brbEntity;
import com.lib.entity.Book;
import com.lib.entity.borrowReturnBooks;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import sun.security.krb5.internal.crypto.KeyUsage;

import java.math.BigDecimal;
import java.util.Date;
import java.util.List;
import java.util.Map;

@Mapper
public interface borrowReturnBooksMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table borrow_return_books
     *
     * @mbggenerated Tue Jul 05 13:25:15 CST 2022
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table borrow_return_books
     *
     * @mbggenerated Tue Jul 05 13:25:15 CST 2022
     */
    int insert(borrowReturnBooks record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table borrow_return_books
     *
     * @mbggenerated Tue Jul 05 13:25:15 CST 2022
     */
    borrowReturnBooks selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table borrow_return_books
     *
     * @mbggenerated Tue Jul 05 13:25:15 CST 2022
     */
    List<borrowReturnBooks> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table borrow_return_books
     *
     * @mbggenerated Tue Jul 05 13:25:15 CST 2022
     *
     */

    int deleteByBookId(Integer bookId);

    int deleteByReaderId(Integer readerId);

    int updateByPrimaryKey(borrowReturnBooks record);

    List<borrowReturnBooks> selectUnfinishedByReaderId(@Param("readerId") Integer readerID);

    List<borrowReturnBooks> selectByBookId(@Param("bookId") Integer bookId);

    List<borrowReturnBooks> selectByReaderId(@Param("readerId") Integer readerId);

    int updateStatusAndReturnTime(@Param("status") Integer status, @Param("returnTime") Date returnTime, @Param("readerId") Integer readerID, @Param("bookId") Integer bookId);

    Date getPlanTimeByReaderIdAndBookId(@Param("readerId") Integer readerID, @Param("bookId") Integer bookId);

    List<brbEntity> selectAllByKeyWord(@Param("keyWord") String keyWord);

    List<Map<Integer, BigDecimal>> getAllBorrowedBook();

    List<ReaderRecordVO> getReaderRecordByReaderIdAndKeyWord(@Param("readerId") Integer readerId, @Param("keyWord") String keyWord);

    int selectCountByReaderId(@Param("readerId") Integer readerId);

    int selectOverdueCountByReaderId(@Param("readerId") Integer readerId, @Param("date") Date date);

    List<Integer> getAllCategoryBorrowedByReaderId(@Param("readerId") Integer readerId);

    Long checkCountApproveAndBorrow(@Param("bookId") Integer bookId);
}